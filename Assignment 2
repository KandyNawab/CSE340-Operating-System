Assignment 2
Group 18
Kanisha Nawab and Dhriti Sarkar

Q1. Describe process swapping.
Process swapping is the memory-management technique that temporarily moves a process between main memory and backup storage. This is to allow more processes to run simultaneously than what the available memory can run. This increases the degree of multiprogramming in a system significantly. 
Traditionally, the standard swapping included moving entire processes between main memory and fast secondary storage. Nowadays, this approach is rarely used, as it is very slow. Almost all modern systems now use paging, where individual pages of a process are moved instead of the entire process, resulting in less overhead and efficient use of memory. 
Excessive use of paging can lead to thrashing, a severe performance problem where the system spends more time swapping than actually executing. This is why devices like Android and iOS generally avoid swapping and hence, rely on terminating applications or using more memory to manage the limited resources.

Q2. Explain the problems of internal and external memory fragmentation and a potential solution.
Memory fragmentation is a problem in operating systems that happens when there is inefficient memory management. There are 2 main forms of this - external fragmentation and internal fragmentation. 
External fragmentation occurs when there is enough total memory space to satisfy a request but the free memory is broken into many smaller, non-adjacent holes. This arises due to processes being constantly loaded in and out of memory. This is a big problem because, in the worst-case scenario, every 2 processes can have a block of free memory between them. This will make one-third of the memory unusable.
Internal fragmentation happens when allocated memory blocks are a little larger than needed, leaving small unusable gaps between them. In the worst case, this can lead to an entire frame of memory being wasted, which amounts to about half a page per process.
A potential solution to this is compaction. Compaction reduces external fragmentation by shuffling the memory contents to relocate all occupied memory blocks to one end of memory and hence, collecting all free memory into one big block. Another option is slab allocation. It is used to primarily allocate kernel memory with the help of cache. This helps in no wastage of memory by fragmentation.

Q3. How is paging used as a memory management technique?
Paging is a memory management technique used by modern computers to manage the main memory and allow multiprogramming. In this, the physical memory is divided into fixed-size blocks called frames. The logical memory is also divided into blocks of the same size called pages. So when the program runs, the pages are loaded into any available memory frames as a secondary storage. This reduces the problem of wasted space. 
Every address generated by the CPU is split into- page number and page offset. Page number is the index in per-process page table. This table has the base addresses for each frame where the corresponding page is stored. Page offset shows the location inside that frame.
Paging avoids external fragmentation and hence reduces the cost for compaction. It also allows larger programs to be in the memory than the actual physical memory available in the system. Finally, it also improves the CPU utilization and multiprogramming.

